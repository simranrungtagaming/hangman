{"ast":null,"code":"var _jsxFileName = \"E:\\\\CodingProjects\\\\game\\\\reactjs-hangman\\\\reactjs-hangman-master\\\\src\\\\components\\\\Hangman.js\";\nimport React, { Component } from \"react\";\nimport { randomWord } from \"./words\";\nimport step0 from \"./images/0.jpg\";\nimport step1 from \"./images/1.jpg\";\nimport step2 from \"./images/2.jpg\";\nimport step3 from \"./images/3.jpg\";\nimport step4 from \"./images/4.jpg\";\nimport step5 from \"./images/5.jpg\";\nimport step6 from \"./images/6.jpg\";\nlet gameStat;\n\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetButton = () => {\n      this.setState({\n        mistake: 0,\n        guessed: new Set(),\n        answer: randomWord()\n      });\n    };\n\n    this.state = {\n      mistake: 0,\n      guessed: new Set(),\n      answer: randomWord()\n    };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n    window.addEventListener(\"keydown\", this.keyPress);\n  }\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(bingo => this.state.guessed.has(bingo) ? bingo : \"_\");\n  }\n\n  handleGuess(value) {\n    let letter = value;\n    this.setState(st => ({\n      guessed: st.guessed.add(letter),\n      mistake: st.mistake + (st.answer.includes(letter) ? 0 : 1)\n    }));\n  }\n\n  keyPress(event) {\n    /**\n     * 8 = backspace\n     * 13 = enter\n     * 32 = space\n     * 65 = A (Capital)\n     * 90 = Z (Capital)\n     * 97 = a (Small)\n     * 122 = z (Small)\n     */\n    if (gameStat === \"YOU WON\" || gameStat === \"YOU LOST\") {\n      if (event.keyCode === 8 || event.keyCode === 13 || event.keyCode === 32) {\n        this.resetButton();\n      }\n    } else if (event.keyCode >= 65 && event.keyCode <= 90 || event.keyCode >= 97 && event.keyCode <= 122) {\n      this.handleGuess(event.key);\n    } else if (event.keyCode === 8 || event.keyCode === 13 || event.keyCode === 32) {\n      this.resetButton();\n    } else {}\n  }\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => /*#__PURE__*/React.createElement(\"button\", {\n      key: letter,\n      value: letter,\n      onClick: e => this.handleGuess(e.target.value),\n      disabled: this.state.guessed.has(letter),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, letter));\n  }\n\n  render() {\n    const {\n      mistake,\n      answer\n    } = this.state;\n    const {\n      maxWrong,\n      images\n    } = this.props;\n    const gameOver = mistake >= maxWrong;\n    const altText = `${mistake}/${maxWrong} wrong guesses`;\n    const isWinner = this.guessedWord().join(\"\") === answer;\n    gameStat = this.generateButtons();\n\n    if (isWinner) {\n      gameStat = \"YOU WON\";\n    }\n\n    if (gameOver) {\n      gameStat = \"YOU LOST\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Hangman\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"navbar-brand text-light\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"Hangman. \", /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 22\n      }\n    }, \"Do (or) Die\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-xl-none d-lg-none text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Guessed wrong: \", mistake), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"navbar-toggler sr-only\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarText\",\n      \"aria-controls\": \"navbarText\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-toggler-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collapse navbar-collapse\",\n      id: \"navbarText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navbar-nav mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-text text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Guessed wrong: \", mistake))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: images[mistake],\n      alt: altText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Guess the Programming Language ?\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Hangman-word text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, !gameOver ? this.guessedWord() : answer, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center text-warning mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, gameStat), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Hangman-reset\",\n      onClick: this.resetButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Reset\"))));\n  }\n\n}\n\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [step0, step1, step2, step3, step4, step5, step6]\n};\nexport default Hangman;","map":{"version":3,"sources":["E:/CodingProjects/game/reactjs-hangman/reactjs-hangman-master/src/components/Hangman.js"],"names":["React","Component","randomWord","step0","step1","step2","step3","step4","step5","step6","gameStat","Hangman","constructor","props","resetButton","setState","mistake","guessed","Set","answer","state","handleGuess","bind","keyPress","window","addEventListener","guessedWord","split","map","bingo","has","value","letter","st","add","includes","event","keyCode","key","generateButtons","e","target","render","maxWrong","images","gameOver","altText","isWinner","join","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { randomWord } from \"./words\";\n\nimport step0 from \"./images/0.jpg\";\nimport step1 from \"./images/1.jpg\";\nimport step2 from \"./images/2.jpg\";\nimport step3 from \"./images/3.jpg\";\nimport step4 from \"./images/4.jpg\";\nimport step5 from \"./images/5.jpg\";\nimport step6 from \"./images/6.jpg\";\n\nlet gameStat;\nclass Hangman extends Component {\n  static defaultProps = {\n    maxWrong: 6,\n    images: [step0, step1, step2, step3, step4, step5, step6],\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mistake: 0,\n      guessed: new Set(),\n      answer: randomWord(),\n    };\n    this.handleGuess = this.handleGuess.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n    window.addEventListener(\"keydown\", this.keyPress);\n  }\n\n  guessedWord() {\n    return this.state.answer\n      .split(\"\")\n      .map((bingo) => (this.state.guessed.has(bingo) ? bingo : \"_\"));\n  }\n\n  handleGuess(value) {\n    let letter = value;\n    this.setState((st) => ({\n      guessed: st.guessed.add(letter),\n      mistake: st.mistake + (st.answer.includes(letter) ? 0 : 1),\n    }));\n  }\n\n  keyPress(event) {\n    /**\n     * 8 = backspace\n     * 13 = enter\n     * 32 = space\n     * 65 = A (Capital)\n     * 90 = Z (Capital)\n     * 97 = a (Small)\n     * 122 = z (Small)\n     */\n    if (gameStat === \"YOU WON\" || gameStat === \"YOU LOST\") {\n      if (event.keyCode === 8 || event.keyCode === 13 || event.keyCode === 32) {\n        this.resetButton();\n      }\n    } else if (\n      (event.keyCode >= 65 && event.keyCode <= 90) ||\n      (event.keyCode >= 97 && event.keyCode <= 122)\n    ) {\n      this.handleGuess(event.key);\n    } else if (\n      event.keyCode === 8 ||\n      event.keyCode === 13 ||\n      event.keyCode === 32\n    ) {\n      this.resetButton();\n    } else {\n    }\n  }\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map((letter) => (\n      <button\n        key={letter}\n        value={letter}\n        onClick={(e) => this.handleGuess(e.target.value)}\n        disabled={this.state.guessed.has(letter)}\n      >\n        {letter}\n      </button>\n    ));\n  }\n\n  resetButton = () => {\n    this.setState({\n      mistake: 0,\n      guessed: new Set(),\n      answer: randomWord(),\n    });\n  };\n\n  render() {\n    const { mistake, answer } = this.state;\n    const { maxWrong, images } = this.props;\n    const gameOver = mistake >= maxWrong;\n    const altText = `${mistake}/${maxWrong} wrong guesses`;\n    const isWinner = this.guessedWord().join(\"\") === answer;\n    gameStat = this.generateButtons();\n    if (isWinner) {\n      gameStat = \"YOU WON\";\n    }\n    if (gameOver) {\n      gameStat = \"YOU LOST\";\n    }\n\n    return (\n      <div className=\"Hangman\">\n        <nav className=\"navbar navbar-expand-lg\">\n          <a className=\"navbar-brand text-light\" href=\"/\">\n            Hangman. <small>Do (or) Die</small>\n          </a>\n          <span className=\"d-xl-none d-lg-none text-primary\">\n            Guessed wrong: {mistake}\n          </span>\n          <button\n            className=\"navbar-toggler sr-only\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarText\"\n            aria-controls=\"navbarText\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item \"></li>\n              <li className=\"nav-item\"></li>\n              <li className=\"nav-item\"></li>\n            </ul>\n            <span className=\"navbar-text text-primary\">\n              Guessed wrong: {mistake}\n            </span>\n          </div>\n        </nav>\n        <p className=\"text-center\">\n          <img src={images[mistake]} alt={altText} />\n        </p>\n        <p className=\"text-center text-light\">\n          Guess the Programming Language ?\n        </p>\n        <p className=\"Hangman-word text-center\">\n          {!gameOver ? this.guessedWord() : answer}{\" \"}\n        </p>\n\n        <p className=\"text-center text-warning mt-4\">{gameStat}</p>\n\n        <div>\n          <p className=\"text-center\">\n            <button className=\"Hangman-reset\" onClick={this.resetButton}>\n              Reset\n            </button>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hangman;"]},"metadata":{},"sourceType":"module"}